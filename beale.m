function [value, gradient_q, hessian_q] = beale(x)
% input: [x; y] output: value gradient hessian
value = (1.5 - x(1) + x(1)*x(2))^2 + (2.25 - x(1) + x(1)*x(2)^2)^2 + (2.625 - x(1) + x(1)*x(2)^3)^2;

if nargout >= 2 % need return gradient
    gradient_q = [(2*(x(2)^2 - 1)*(x(1)*x(2)^2 - x(1) + 9/4) + 2*(x(2)^3 - 1)*(x(1)*x(2)^3 - x(1) + 21/8) + 2*(x(2) - 1)*(x(1)*x(2) - x(1) + 3/2));
                  2*x(1)*(x(1)*x(2) - x(1) + 3/2) + 4*x(1)*x(2)*(x(1)*x(2)^2 - x(1) + 9/4) + 6*x(1)*x(2)^2*(x(1)*x(2)^3 - x(1) + 21/8)];

    if nargout >= 3 % need return hessian matrix
        hessian_q = [(2*(x(2) - 1)^2 + 2*(x(2)^2 - 1)^2 + 2*(x(2)^3 - 1)^2), (6*x(2)^2*(x(1)*x(2)^3 - x(1) + 21/8) - 2*x(1) + 2*x(1)*x(2) + 2*x(1)*(x(2) - 1) + 4*x(2)*(x(1)*x(2)^2 - x(1) + 9/4) + 4*x(1)*x(2)*(x(2)^2 - 1) + 6*x(1)*x(2)^2*(x(2)^3 - 1) + 3);
                   (6*x(2)^2*(x(1)*x(2)^3 - x(1) + 21/8) - 2*x(1) + 2*x(1)*x(2) + 2*x(1)*(x(2) - 1) + 4*x(2)*(x(1)*x(2)^2 - x(1) + 9/4) + 4*x(1)*x(2)*(x(2)^2 - 1) + 6*x(1)*x(2)^2*(x(2)^3 - 1) + 3), (8*x(1)^2*x(2)^2 + 18*x(1)^2*x(2)^4 + 4*x(1)*(x(1)*x(2)^2 - x(1) + 9/4) + 2*x(1)^2 + 12*x(1)*x(2)*(x(1)*x(2)^3 - x(1) + 21/8))];
    end

end
